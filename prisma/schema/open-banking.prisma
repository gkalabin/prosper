
model TrueLayerToken {
  id                String   @id @default(uuid())
  bank              Bank     @relation(fields: [bankId], references: [id])
  bankId            Int      @unique
  access            String   @db.VarChar(4096)
  accessValidUntil  DateTime
  refresh           String   @db.VarChar(4096)
  refreshValidUntil DateTime
  user              User     @relation(fields: [userId], references: [id])
  userId            Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model NordigenToken {
  id                String   @id @default(uuid())
  bank              Bank     @relation(fields: [bankId], references: [id])
  bankId            Int      @unique
  access            String   @db.VarChar(4096)
  accessValidUntil  DateTime
  refresh           String   @db.VarChar(4096)
  refreshValidUntil DateTime
  user              User     @relation(fields: [userId], references: [id])
  userId            Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model NordigenRequisition {
  id            String   @id
  requisitionId String   @unique
  institutionId String
  bank          Bank     @relation(fields: [bankId], references: [id])
  bankId        Int      @unique
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  completed     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model StarlingToken {
  id                String   @id @default(uuid())
  bank              Bank     @relation(fields: [bankId], references: [id])
  bankId            Int      @unique
  access            String   @db.VarChar(4096)
  accessValidUntil  DateTime
  refresh           String   @db.VarChar(4096)
  refreshValidUntil DateTime
  user              User     @relation(fields: [userId], references: [id])
  userId            Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
